// Code generated by MockGen. DO NOT EDIT.
// Source: ./manager_client.go

// Package mock_manager_client is a generated GoMock package.
package mock_manager_client

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockmanagerClient is a mock of managerClient interface.
type MockmanagerClient struct {
	ctrl     *gomock.Controller
	recorder *MockmanagerClientMockRecorder
}

// MockmanagerClientMockRecorder is the mock recorder for MockmanagerClient.
type MockmanagerClientMockRecorder struct {
	mock *MockmanagerClient
}

// NewMockmanagerClient creates a new mock instance.
func NewMockmanagerClient(ctrl *gomock.Controller) *MockmanagerClient {
	mock := &MockmanagerClient{ctrl: ctrl}
	mock.recorder = &MockmanagerClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockmanagerClient) EXPECT() *MockmanagerClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockmanagerClient) Get() (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockmanagerClientMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockmanagerClient)(nil).Get))
}
