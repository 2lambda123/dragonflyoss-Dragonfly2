// Code generated by MockGen. DO NOT EDIT.
// Source: dns_resolver.go

// Package dns is a generated GoMock package.
package dns

import (
	context "context"
	net "net"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocknetResolver is a mock of netResolver interface.
type MocknetResolver struct {
	ctrl     *gomock.Controller
	recorder *MocknetResolverMockRecorder
}

// MocknetResolverMockRecorder is the mock recorder for MocknetResolver.
type MocknetResolverMockRecorder struct {
	mock *MocknetResolver
}

// NewMocknetResolver creates a new mock instance.
func NewMocknetResolver(ctrl *gomock.Controller) *MocknetResolver {
	mock := &MocknetResolver{ctrl: ctrl}
	mock.recorder = &MocknetResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocknetResolver) EXPECT() *MocknetResolverMockRecorder {
	return m.recorder
}

// LookupHost mocks base method.
func (m *MocknetResolver) LookupHost(ctx context.Context, host string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LookupHost", ctx, host)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LookupHost indicates an expected call of LookupHost.
func (mr *MocknetResolverMockRecorder) LookupHost(ctx, host interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookupHost", reflect.TypeOf((*MocknetResolver)(nil).LookupHost), ctx, host)
}

// LookupSRV mocks base method.
func (m *MocknetResolver) LookupSRV(ctx context.Context, service, proto, name string) (string, []*net.SRV, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LookupSRV", ctx, service, proto, name)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].([]*net.SRV)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// LookupSRV indicates an expected call of LookupSRV.
func (mr *MocknetResolverMockRecorder) LookupSRV(ctx, service, proto, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookupSRV", reflect.TypeOf((*MocknetResolver)(nil).LookupSRV), ctx, service, proto, name)
}

// LookupTXT mocks base method.
func (m *MocknetResolver) LookupTXT(ctx context.Context, name string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LookupTXT", ctx, name)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LookupTXT indicates an expected call of LookupTXT.
func (mr *MocknetResolverMockRecorder) LookupTXT(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookupTXT", reflect.TypeOf((*MocknetResolver)(nil).LookupTXT), ctx, name)
}
