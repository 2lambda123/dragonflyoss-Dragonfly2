//
//     Copyright 2020 The Dragonfly Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: pkg/rpc/manager/manager.proto

package manager

import (
	base "github.com/dragonflyoss/Dragonfly2/pkg/rpc/base"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NavigatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip       string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	HostName string `protobuf:"bytes,2,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	// client tag, json format: {vpcId:xxx,sn:xxx,group:xxx,...}
	HostTag string `protobuf:"bytes,3,opt,name=host_tag,json=hostTag,proto3" json:"host_tag,omitempty"`
}

func (x *NavigatorRequest) Reset() {
	*x = NavigatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_manager_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NavigatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NavigatorRequest) ProtoMessage() {}

func (x *NavigatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_manager_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NavigatorRequest.ProtoReflect.Descriptor instead.
func (*NavigatorRequest) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_manager_manager_proto_rawDescGZIP(), []int{0}
}

func (x *NavigatorRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *NavigatorRequest) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *NavigatorRequest) GetHostTag() string {
	if x != nil {
		return x.HostTag
	}
	return ""
}

type ClientHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip             string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	HostName       string `protobuf:"bytes,2,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	SecurityDomain string `protobuf:"bytes,3,opt,name=security_domain,json=securityDomain,proto3" json:"security_domain,omitempty"` // security isolation domain for network
	Location       string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`                                   // area|country|province|city|...
	Idc            string `protobuf:"bytes,5,opt,name=idc,proto3" json:"idc,omitempty"`
	Switch         string `protobuf:"bytes,6,opt,name=switch,proto3" json:"switch,omitempty"`
}

func (x *ClientHost) Reset() {
	*x = ClientHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_manager_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientHost) ProtoMessage() {}

func (x *ClientHost) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_manager_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientHost.ProtoReflect.Descriptor instead.
func (*ClientHost) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_manager_manager_proto_rawDescGZIP(), []int{1}
}

func (x *ClientHost) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ClientHost) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *ClientHost) GetSecurityDomain() string {
	if x != nil {
		return x.SecurityDomain
	}
	return ""
}

func (x *ClientHost) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ClientHost) GetIdc() string {
	if x != nil {
		return x.Idc
	}
	return ""
}

func (x *ClientHost) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

type SchedulerHosts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State      *base.ResponseState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Addrs      []string            `protobuf:"bytes,2,rep,name=addrs,proto3" json:"addrs,omitempty"` // ip:port
	ClientHost *ClientHost         `protobuf:"bytes,3,opt,name=client_host,json=clientHost,proto3" json:"client_host,omitempty"`
}

func (x *SchedulerHosts) Reset() {
	*x = SchedulerHosts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_manager_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulerHosts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulerHosts) ProtoMessage() {}

func (x *SchedulerHosts) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_manager_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulerHosts.ProtoReflect.Descriptor instead.
func (*SchedulerHosts) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_manager_manager_proto_rawDescGZIP(), []int{2}
}

func (x *SchedulerHosts) GetState() *base.ResponseState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *SchedulerHosts) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *SchedulerHosts) GetClientHost() *ClientHost {
	if x != nil {
		return x.ClientHost
	}
	return nil
}

type CdnHosts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *base.ResponseState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Addrs []string            `protobuf:"bytes,2,rep,name=addrs,proto3" json:"addrs,omitempty"` // ip:port
}

func (x *CdnHosts) Reset() {
	*x = CdnHosts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_manager_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CdnHosts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CdnHosts) ProtoMessage() {}

func (x *CdnHosts) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_manager_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CdnHosts.ProtoReflect.Descriptor instead.
func (*CdnHosts) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_manager_manager_proto_rawDescGZIP(), []int{3}
}

func (x *CdnHosts) GetState() *base.ResponseState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *CdnHosts) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

var File_pkg_rpc_manager_manager_proto protoreflect.FileDescriptor

var file_pkg_rpc_manager_manager_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x17, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x70,
	0x63, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x5a, 0x0a, 0x10, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x54, 0x61, 0x67, 0x22, 0xa8, 0x01,
	0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x87, 0x01, 0x0a, 0x0e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x6f,
	0x73, 0x74, 0x22, 0x4b, 0x0a, 0x08, 0x43, 0x64, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x32,
	0x93, 0x01, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x73,
	0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4e, 0x61, 0x76, 0x69, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x48,
	0x6f, 0x73, 0x74, 0x73, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x64, 0x6e,
	0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x64, 0x6e, 0x48, 0x6f,
	0x73, 0x74, 0x73, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x66, 0x6c, 0x79, 0x6f, 0x73, 0x73,
	0x2f, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x66, 0x6c, 0x79, 0x32, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x72, 0x70, 0x63, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pkg_rpc_manager_manager_proto_rawDescOnce sync.Once
	file_pkg_rpc_manager_manager_proto_rawDescData = file_pkg_rpc_manager_manager_proto_rawDesc
)

func file_pkg_rpc_manager_manager_proto_rawDescGZIP() []byte {
	file_pkg_rpc_manager_manager_proto_rawDescOnce.Do(func() {
		file_pkg_rpc_manager_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_rpc_manager_manager_proto_rawDescData)
	})
	return file_pkg_rpc_manager_manager_proto_rawDescData
}

var file_pkg_rpc_manager_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pkg_rpc_manager_manager_proto_goTypes = []interface{}{
	(*NavigatorRequest)(nil),   // 0: manager.NavigatorRequest
	(*ClientHost)(nil),         // 1: manager.ClientHost
	(*SchedulerHosts)(nil),     // 2: manager.SchedulerHosts
	(*CdnHosts)(nil),           // 3: manager.CdnHosts
	(*base.ResponseState)(nil), // 4: base.ResponseState
}
var file_pkg_rpc_manager_manager_proto_depIdxs = []int32{
	4, // 0: manager.SchedulerHosts.state:type_name -> base.ResponseState
	1, // 1: manager.SchedulerHosts.client_host:type_name -> manager.ClientHost
	4, // 2: manager.CdnHosts.state:type_name -> base.ResponseState
	0, // 3: manager.Manager.GetSchedulerHosts:input_type -> manager.NavigatorRequest
	0, // 4: manager.Manager.GetCdnHosts:input_type -> manager.NavigatorRequest
	2, // 5: manager.Manager.GetSchedulerHosts:output_type -> manager.SchedulerHosts
	3, // 6: manager.Manager.GetCdnHosts:output_type -> manager.CdnHosts
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_rpc_manager_manager_proto_init() }
func file_pkg_rpc_manager_manager_proto_init() {
	if File_pkg_rpc_manager_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_rpc_manager_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NavigatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_manager_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_manager_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulerHosts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_manager_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CdnHosts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_rpc_manager_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_rpc_manager_manager_proto_goTypes,
		DependencyIndexes: file_pkg_rpc_manager_manager_proto_depIdxs,
		MessageInfos:      file_pkg_rpc_manager_manager_proto_msgTypes,
	}.Build()
	File_pkg_rpc_manager_manager_proto = out.File
	file_pkg_rpc_manager_manager_proto_rawDesc = nil
	file_pkg_rpc_manager_manager_proto_goTypes = nil
	file_pkg_rpc_manager_manager_proto_depIdxs = nil
}
