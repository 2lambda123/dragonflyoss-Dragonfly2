apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "dragonfly.dfdaemon.fullname" . }}
  namespace: {{ .Values.installation.namespace }}
  labels:
    app: {{ template "dragonfly.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  dfget.yaml: |-
    alive_time: {{ .Values.dfdaemon.config.alive_time }}
    gc_interval: {{ .Values.dfdaemon.config.gc_interval }}
    keep_storage: {{ .Values.dfdaemon.config.keep_storage }}
    verbose: {{ .Values.dfdaemon.config.verbose }}
    scheduler:
      net_addrs:
      {{- $count := .Values.scheduler.replicas | int}}
      {{- range $i, $x := until $count }}
      - type: tcp
        addr: {{template "dragonfly.scheduler.fullname" $ }}-{{$i}}.{{ $.Release.Namespace }}.svc{{ $.Values.installation.clusterDomain }}:{{ $.Values.scheduler.service.port }}
      {{- end }}
      schedule_timeout: 5m
    host:
{{ toYaml .Values.dfdaemon.config.host | indent 6 }}
    download:
{{ toYaml .Values.dfdaemon.config.download | indent 6 }}
    upload:
{{ toYaml .Values.dfdaemon.config.upload | indent 6 }}
    storage:
{{ toYaml .Values.dfdaemon.config.storage | indent 6 }}
    proxy:
      tcp_listen:
    {{- if not .Values.dfdaemon.hostNetwork }}
        namespace: /host/ns/net
    {{- end }}
        listen: {{ .Values.dfdaemon.config.proxy.tcp_listen.listen }}
        port: {{ .Values.dfdaemon.config.proxy.tcp_listen.port }}
      security:
{{ toYaml .Values.dfdaemon.config.proxy.security | indent 8 }}
      registry_mirror:
{{ toYaml .Values.dfdaemon.config.proxy.registry_mirror | indent 8 }}
      proxies:
{{ toYaml .Values.dfdaemon.config.proxy.proxies | indent 8 }}

