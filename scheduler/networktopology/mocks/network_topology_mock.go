// Code generated by MockGen. DO NOT EDIT.
// Source: network_topology.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	networktopology "d7y.io/dragonfly/v2/scheduler/networktopology"
	gomock "github.com/golang/mock/gomock"
)

// MockNetworkTopology is a mock of NetworkTopology interface.
type MockNetworkTopology struct {
	ctrl     *gomock.Controller
	recorder *MockNetworkTopologyMockRecorder
}

// MockNetworkTopologyMockRecorder is the mock recorder for MockNetworkTopology.
type MockNetworkTopologyMockRecorder struct {
	mock *MockNetworkTopology
}

// NewMockNetworkTopology creates a new mock instance.
func NewMockNetworkTopology(ctrl *gomock.Controller) *MockNetworkTopology {
	mock := &MockNetworkTopology{ctrl: ctrl}
	mock.recorder = &MockNetworkTopologyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNetworkTopology) EXPECT() *MockNetworkTopologyMockRecorder {
	return m.recorder
}

// AverageRTT mocks base method.
func (m *MockNetworkTopology) AverageRTT(src, dest string) time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AverageRTT", src, dest)
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// AverageRTT indicates an expected call of AverageRTT.
func (mr *MockNetworkTopologyMockRecorder) AverageRTT(src, dest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AverageRTT", reflect.TypeOf((*MockNetworkTopology)(nil).AverageRTT), src, dest)
}

// CreatedAt mocks base method.
func (m *MockNetworkTopology) CreatedAt(src, dest string) time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatedAt", src, dest)
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// CreatedAt indicates an expected call of CreatedAt.
func (mr *MockNetworkTopologyMockRecorder) CreatedAt(src, dest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatedAt", reflect.TypeOf((*MockNetworkTopology)(nil).CreatedAt), src, dest)
}

// DeleteDestHosts mocks base method.
func (m *MockNetworkTopology) DeleteDestHosts(src string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDestHosts", src)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteDestHosts indicates an expected call of DeleteDestHosts.
func (mr *MockNetworkTopologyMockRecorder) DeleteDestHosts(src interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDestHosts", reflect.TypeOf((*MockNetworkTopology)(nil).DeleteDestHosts), src)
}

// Dequeue mocks base method.
func (m *MockNetworkTopology) Dequeue(src, dest string) (*networktopology.Probe, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dequeue", src, dest)
	ret0, _ := ret[0].(*networktopology.Probe)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Dequeue indicates an expected call of Dequeue.
func (mr *MockNetworkTopologyMockRecorder) Dequeue(src, dest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dequeue", reflect.TypeOf((*MockNetworkTopology)(nil).Dequeue), src, dest)
}

// Enqueue mocks base method.
func (m *MockNetworkTopology) Enqueue(src, dest string, probe *networktopology.Probe) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Enqueue", src, dest, probe)
	ret0, _ := ret[0].(error)
	return ret0
}

// Enqueue indicates an expected call of Enqueue.
func (mr *MockNetworkTopologyMockRecorder) Enqueue(src, dest, probe interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Enqueue", reflect.TypeOf((*MockNetworkTopology)(nil).Enqueue), src, dest, probe)
}

// Items mocks base method.
func (m *MockNetworkTopology) Items(src, dest string) []*networktopology.Probe {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Items", src, dest)
	ret0, _ := ret[0].([]*networktopology.Probe)
	return ret0
}

// Items indicates an expected call of Items.
func (mr *MockNetworkTopologyMockRecorder) Items(src, dest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Items", reflect.TypeOf((*MockNetworkTopology)(nil).Items), src, dest)
}

// Length mocks base method.
func (m *MockNetworkTopology) Length(src, dest string) int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Length", src, dest)
	ret0, _ := ret[0].(int64)
	return ret0
}

// Length indicates an expected call of Length.
func (mr *MockNetworkTopologyMockRecorder) Length(src, dest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Length", reflect.TypeOf((*MockNetworkTopology)(nil).Length), src, dest)
}

// LoadDestHosts mocks base method.
func (m *MockNetworkTopology) LoadDestHosts(src string) ([]string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadDestHosts", src)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// LoadDestHosts indicates an expected call of LoadDestHosts.
func (mr *MockNetworkTopologyMockRecorder) LoadDestHosts(src interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadDestHosts", reflect.TypeOf((*MockNetworkTopology)(nil).LoadDestHosts), src)
}

// Peek mocks base method.
func (m *MockNetworkTopology) Peek(src, dest string) (*networktopology.Probe, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Peek", src, dest)
	ret0, _ := ret[0].(*networktopology.Probe)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Peek indicates an expected call of Peek.
func (mr *MockNetworkTopologyMockRecorder) Peek(src, dest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Peek", reflect.TypeOf((*MockNetworkTopology)(nil).Peek), src, dest)
}

// StoreProbe mocks base method.
func (m *MockNetworkTopology) StoreProbe(src, dest string, probe *networktopology.Probe) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreProbe", src, dest, probe)
	ret0, _ := ret[0].(bool)
	return ret0
}

// StoreProbe indicates an expected call of StoreProbe.
func (mr *MockNetworkTopologyMockRecorder) StoreProbe(src, dest, probe interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreProbe", reflect.TypeOf((*MockNetworkTopology)(nil).StoreProbe), src, dest, probe)
}

// UpdatedAt mocks base method.
func (m *MockNetworkTopology) UpdatedAt(src, dest string) time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatedAt", src, dest)
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// UpdatedAt indicates an expected call of UpdatedAt.
func (mr *MockNetworkTopologyMockRecorder) UpdatedAt(src, dest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatedAt", reflect.TypeOf((*MockNetworkTopology)(nil).UpdatedAt), src, dest)
}
