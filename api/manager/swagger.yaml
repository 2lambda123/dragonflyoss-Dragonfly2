basePath: /api/v1
definitions:
  model.Application:
    properties:
      bio:
        type: string
      download_rate_limit:
        type: integer
      name:
        type: string
      scheduler_clusters:
        items:
          $ref: '#/definitions/model.SchedulerCluster'
        type: array
      seed_peer_clusters:
        items:
          $ref: '#/definitions/model.SeedPeerCluster'
        type: array
      state:
        type: string
      url:
        type: string
      user:
        $ref: '#/definitions/model.User'
      user_id:
        type: integer
    type: object
  model.Assertion:
    properties:
      key:
        type: string
      policy:
        items:
          items:
            type: string
          type: array
        type: array
      policyMap:
        additionalProperties:
          type: integer
        type: object
      rm: {}
      tokens:
        items:
          type: string
        type: array
      value:
        type: string
    type: object
  model.AssertionMap:
    additionalProperties:
      $ref: '#/definitions/model.Assertion'
    type: object
  model.Config:
    properties:
      bio:
        type: string
      name:
        type: string
      user_id:
        type: integer
      value:
        type: string
    type: object
  model.JSONMap:
    additionalProperties: true
    type: object
  model.Job:
    properties:
      args:
        $ref: '#/definitions/model.JSONMap'
      bio:
        type: string
      result:
        $ref: '#/definitions/model.JSONMap'
      scheduler_clusters:
        items:
          $ref: '#/definitions/model.SchedulerCluster'
        type: array
      seed_peer_clusters:
        items:
          $ref: '#/definitions/model.SeedPeerCluster'
        type: array
      state:
        type: string
      task_id:
        type: string
      type:
        type: string
      user_id:
        type: integer
    type: object
  model.Oauth:
    properties:
      bio:
        type: string
      client_id:
        type: string
      client_secret:
        type: string
      name:
        type: string
      redirect_url:
        type: string
    type: object
  model.Scheduler:
    properties:
      host_name:
        type: string
      idc:
        type: string
      ip:
        type: string
      location:
        type: string
      net_topology:
        type: string
      port:
        type: integer
      schedulerClusterID:
        type: integer
      state:
        type: string
    type: object
  model.SchedulerCluster:
    properties:
      application_id:
        type: integer
      bio:
        type: string
      client_config:
        $ref: '#/definitions/model.JSONMap'
      config:
        $ref: '#/definitions/model.JSONMap'
      is_default:
        type: boolean
      jobs:
        items:
          $ref: '#/definitions/model.Job'
        type: array
      name:
        type: string
      scopes:
        $ref: '#/definitions/model.JSONMap'
      security_group_id:
        type: integer
      seed_peer_clusters:
        items:
          $ref: '#/definitions/model.SeedPeerCluster'
        type: array
    type: object
  model.SecurityGroup:
    properties:
      bio:
        type: string
      name:
        type: string
      security_rules:
        items:
          $ref: '#/definitions/model.SecurityRule'
        type: array
    type: object
  model.SecurityRule:
    properties:
      bio:
        type: string
      domain:
        type: string
      name:
        type: string
      proxy_domain:
        type: string
      security_groups:
        items:
          $ref: '#/definitions/model.SecurityGroup'
        type: array
    type: object
  model.SeedPeer:
    properties:
      download_port:
        type: integer
      host_name:
        type: string
      idc:
        type: string
      ip:
        type: string
      is_cdn:
        type: boolean
      location:
        type: string
      net_topology:
        type: string
      port:
        type: integer
      seedPeerClusterID:
        type: integer
      state:
        type: string
      type:
        type: string
    type: object
  model.SeedPeerCluster:
    properties:
      application_id:
        type: integer
      bio:
        type: string
      config:
        $ref: '#/definitions/model.JSONMap'
      is_default:
        type: boolean
      jobs:
        items:
          $ref: '#/definitions/model.Job'
        type: array
      name:
        type: string
      scheduler_clusters:
        items:
          $ref: '#/definitions/model.SchedulerCluster'
        type: array
      scopes:
        $ref: '#/definitions/model.JSONMap'
      security_group_id:
        type: integer
    type: object
  model.User:
    properties:
      avatar:
        type: string
      bio:
        type: string
      email:
        type: string
      location:
        type: string
      name:
        type: string
      phone:
        type: string
      state:
        type: string
    type: object
  objectstorage.BucketMetadata:
    properties:
      createAt:
        description: CreateAt is bucket create time.
        type: string
      name:
        description: Name is bucket name
        type: string
    type: object
  rbac.Permission:
    properties:
      action:
        enum:
        - read
        - '*'
        type: string
      object:
        type: string
    required:
    - action
    - object
    type: object
  types.AddPermissionForRoleRequest:
    properties:
      action:
        enum:
        - read
        - '*'
        type: string
      object:
        type: string
    required:
    - action
    - object
    type: object
  types.CreateApplicationRequest:
    properties:
      bio:
        type: string
      download_rate_limit:
        type: integer
      name:
        type: string
      state:
        enum:
        - enable
        - disable
        type: string
      url:
        type: string
      user_id:
        type: integer
    required:
    - name
    - user_id
    type: object
  types.CreateBucketRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  types.CreateConfigRequest:
    properties:
      bio:
        type: string
      name:
        type: string
      user_id:
        type: integer
      value:
        type: string
    required:
    - name
    - user_id
    - value
    type: object
  types.CreateJobRequest:
    properties:
      args:
        additionalProperties: true
        type: object
      bio:
        type: string
      result:
        additionalProperties: true
        type: object
      scheduler_cluster_ids:
        items:
          type: integer
        type: array
      seed_peer_cluster_ids:
        items:
          type: integer
        type: array
      type:
        type: string
      user_id:
        type: integer
    required:
    - type
    type: object
  types.CreateOauthRequest:
    properties:
      bio:
        type: string
      client_id:
        type: string
      client_secret:
        type: string
      name:
        enum:
        - github
        - google
        type: string
      redirect_url:
        type: string
    required:
    - client_id
    - client_secret
    - name
    type: object
  types.CreateRoleRequest:
    properties:
      permissions:
        items:
          $ref: '#/definitions/rbac.Permission'
        type: array
      role:
        type: string
    required:
    - permissions
    - role
    type: object
  types.CreateSchedulerClusterRequest:
    properties:
      bio:
        type: string
      client_config:
        $ref: '#/definitions/types.SchedulerClusterClientConfig'
      config:
        $ref: '#/definitions/types.SchedulerClusterConfig'
      is_default:
        type: boolean
      name:
        type: string
      scopes:
        $ref: '#/definitions/types.SchedulerClusterScopes'
      security_group_id:
        type: integer
      seed_peer_cluster_id:
        type: integer
    required:
    - client_config
    - config
    - name
    type: object
  types.CreateSchedulerRequest:
    properties:
      host_name:
        type: string
      idc:
        type: string
      ip:
        type: string
      location:
        type: string
      net_topology:
        type: string
      port:
        type: integer
      scheduler_cluster_id:
        type: integer
    required:
    - host_name
    - ip
    - port
    - scheduler_cluster_id
    type: object
  types.CreateSecurityGroupRequest:
    properties:
      bio:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  types.CreateSecurityRuleRequest:
    properties:
      bio:
        type: string
      domain:
        type: string
      name:
        type: string
      proxy_domain:
        type: string
    required:
    - domain
    - name
    type: object
  types.CreateSeedPeerClusterRequest:
    properties:
      bio:
        type: string
      config:
        $ref: '#/definitions/types.SeedPeerClusterConfig'
      is_default:
        type: boolean
      name:
        type: string
      scopes:
        $ref: '#/definitions/types.SeedPeerClusterScopes'
    required:
    - config
    - name
    type: object
  types.CreateSeedPeerRequest:
    properties:
      download_port:
        type: integer
      host_name:
        type: string
      idc:
        type: string
      ip:
        type: string
      location:
        type: string
      net_topology:
        type: string
      port:
        type: integer
      seed_peer_cluster_id:
        type: integer
      type:
        enum:
        - super
        - strong
        - weak
        type: string
    required:
    - download_port
    - host_name
    - ip
    - port
    - seed_peer_cluster_id
    - type
    type: object
  types.CreateV1PreheatRequest:
    properties:
      filter:
        type: string
      headers:
        additionalProperties:
          type: string
        type: object
      type:
        enum:
        - image
        - file
        type: string
      url:
        type: string
    required:
    - type
    - url
    type: object
  types.CreateV1PreheatResponse:
    properties:
      id:
        type: string
    type: object
  types.DeletePermissionForRoleRequest:
    properties:
      action:
        enum:
        - read
        - '*'
        type: string
      object:
        type: string
    required:
    - action
    - object
    type: object
  types.GetV1PreheatResponse:
    properties:
      finishTime:
        type: string
      id:
        type: string
      startTime:
        type: string
      status:
        type: string
    type: object
  types.ResetPasswordRequest:
    properties:
      new_password:
        maxLength: 20
        minLength: 8
        type: string
      old_password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - new_password
    - old_password
    type: object
  types.SchedulerClusterClientConfig:
    properties:
      load_limit:
        maximum: 2000
        minimum: 1
        type: integer
      parallel_count:
        maximum: 50
        minimum: 1
        type: integer
    type: object
  types.SchedulerClusterConfig:
    properties:
      filter_parent_limit:
        maximum: 100
        minimum: 1
        type: integer
    type: object
  types.SchedulerClusterScopes:
    properties:
      idc:
        type: string
      location:
        type: string
      net_topology:
        type: string
    type: object
  types.SeedPeerClusterConfig:
    properties:
      load_limit:
        maximum: 5000
        minimum: 1
        type: integer
    type: object
  types.SeedPeerClusterScopes:
    properties:
      idc:
        type: string
      location:
        type: string
      net_topology:
        type: string
    type: object
  types.SignUpRequest:
    properties:
      avatar:
        type: string
      bio:
        type: string
      email:
        type: string
      location:
        type: string
      name:
        maxLength: 10
        minLength: 3
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
      phone:
        type: string
    required:
    - email
    - name
    - password
    type: object
  types.UpdateApplicationRequest:
    properties:
      bio:
        type: string
      download_rate_limit:
        type: integer
      name:
        type: string
      state:
        enum:
        - enable
        - disable
        type: string
      url:
        type: string
      user_id:
        type: integer
    required:
    - user_id
    type: object
  types.UpdateConfigRequest:
    properties:
      bio:
        type: string
      name:
        type: string
      user_id:
        type: integer
      value:
        type: string
    type: object
  types.UpdateJobRequest:
    properties:
      bio:
        type: string
      user_id:
        type: integer
    type: object
  types.UpdateOauthRequest:
    properties:
      bio:
        type: string
      client_id:
        type: string
      client_secret:
        type: string
      name:
        enum:
        - github
        - google
        type: string
      redirect_url:
        type: string
    type: object
  types.UpdateSchedulerClusterRequest:
    properties:
      bio:
        type: string
      client_config:
        $ref: '#/definitions/types.SchedulerClusterClientConfig'
      config:
        $ref: '#/definitions/types.SchedulerClusterConfig'
      is_default:
        type: boolean
      name:
        type: string
      scopes:
        $ref: '#/definitions/types.SchedulerClusterScopes'
      security_group_id:
        type: integer
      seed_peer_cluster_id:
        type: integer
    type: object
  types.UpdateSchedulerRequest:
    properties:
      idc:
        type: string
      ip:
        type: string
      location:
        type: string
      net_topology:
        type: string
      port:
        type: integer
      scheduler_cluster_id:
        type: integer
      scheduler_id:
        type: integer
    type: object
  types.UpdateSecurityGroupRequest:
    properties:
      bio:
        type: string
      name:
        type: string
    type: object
  types.UpdateSecurityRuleRequest:
    properties:
      bio:
        type: string
      domain:
        type: string
      name:
        type: string
      proxy_domain:
        type: string
    type: object
  types.UpdateSeedPeerClusterRequest:
    properties:
      bio:
        type: string
      config:
        $ref: '#/definitions/types.SeedPeerClusterConfig'
      is_default:
        type: boolean
      name:
        type: string
      scopes:
        $ref: '#/definitions/types.SeedPeerClusterScopes'
    type: object
  types.UpdateSeedPeerRequest:
    properties:
      download_port:
        type: integer
      idc:
        type: string
      ip:
        type: string
      location:
        type: string
      net_topology:
        type: string
      port:
        type: integer
      seed_peer_cluster_id:
        type: integer
      type:
        enum:
        - super
        - strong
        - weak
        type: string
    type: object
  types.UpdateUserRequest:
    properties:
      avatar:
        type: string
      bio:
        type: string
      email:
        type: string
      location:
        type: string
      phone:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    url: https://d7y.io
  description: Dragonfly Manager Server
  license:
    name: Apache 2.0
  title: Dragonfly Manager
  version: 1.0.0
paths:
  /applications:
    get:
      consumes:
      - application/json
      description: Get Applications
      parameters:
      - default: 0
        description: current page
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: return max item count, default 10, max 50
        in: query
        maximum: 50
        minimum: 2
        name: per_page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Application'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Applications
      tags:
      - Application
    post:
      consumes:
      - application/json
      description: create by json config
      parameters:
      - description: Application
        in: body
        name: Application
        required: true
        schema:
          $ref: '#/definitions/types.CreateApplicationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Application'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Create Application
      tags:
      - Application
  /applications/{id}:
    delete:
      consumes:
      - application/json
      description: Destroy by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Destroy Application
      tags:
      - Application
    get:
      consumes:
      - application/json
      description: Get Application by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Application'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Application
      tags:
      - Application
    patch:
      consumes:
      - application/json
      description: Update by json config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Application
        in: body
        name: Application
        required: true
        schema:
          $ref: '#/definitions/types.UpdateApplicationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Application'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update Application
      tags:
      - Application
  /applications/{id}/scheduler-clusters/{scheduler_cluster_id}:
    delete:
      consumes:
      - application/json
      description: Delete Scheduler to Application
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: scheduler cluster id
        in: path
        name: scheduler_cluster_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Delete Scheduler to Application
      tags:
      - Application
    put:
      consumes:
      - application/json
      description: Add Scheduler to Application
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: scheduler cluster id
        in: path
        name: scheduler_cluster_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Add Scheduler to Application
      tags:
      - Application
  /applications/{id}/seed-peer-clusters/{seed_peer_cluster_id}:
    delete:
      consumes:
      - application/json
      description: Delete SeedPeer to Application
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: seed peer cluster id
        in: path
        name: seed_peer_cluster_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Delete SeedPeer to Application
      tags:
      - Application
    put:
      consumes:
      - application/json
      description: Add SeedPeer to Application
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: seed peer cluster id
        in: path
        name: seed_peer_cluster_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Add SeedPeer to Application
      tags:
      - Application
  /buckets:
    get:
      consumes:
      - application/json
      description: Get Buckets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/objectstorage.BucketMetadata'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Buckets
      tags:
      - Bucket
    post:
      consumes:
      - application/json
      description: create by json bucket
      parameters:
      - description: Bucket
        in: body
        name: Bucket
        required: true
        schema:
          $ref: '#/definitions/types.CreateBucketRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Create Bucket
      tags:
      - Bucket
  /buckets/{id}:
    delete:
      consumes:
      - application/json
      description: Destroy by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Destroy Bucket
      tags:
      - Bucket
    get:
      consumes:
      - application/json
      description: Get Bucket by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/objectstorage.BucketMetadata'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Bucket
      tags:
      - Bucket
  /configs:
    get:
      consumes:
      - application/json
      description: Get Configs
      parameters:
      - default: 0
        description: current page
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: return max item count, default 10, max 50
        in: query
        maximum: 50
        minimum: 2
        name: per_page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Config'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Configs
      tags:
      - Config
    post:
      consumes:
      - application/json
      description: create by json config
      parameters:
      - description: Config
        in: body
        name: Config
        required: true
        schema:
          $ref: '#/definitions/types.CreateConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Config'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Create Config
      tags:
      - Config
  /configs/{id}:
    delete:
      consumes:
      - application/json
      description: Destroy by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Destroy Config
      tags:
      - Config
    get:
      consumes:
      - application/json
      description: Get Config by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Config'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Config
      tags:
      - Config
    patch:
      consumes:
      - application/json
      description: Update by json config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Config
        in: body
        name: Config
        required: true
        schema:
          $ref: '#/definitions/types.UpdateConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Config'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update Config
      tags:
      - Config
  /healthy:
    get:
      consumes:
      - application/json
      description: Get app health
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Health
      tags:
      - Health
  /jobs:
    get:
      consumes:
      - application/json
      description: Get Jobs
      parameters:
      - default: 0
        description: current page
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: return max item count, default 10, max 50
        in: query
        maximum: 50
        minimum: 2
        name: per_page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Job'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Jobs
      tags:
      - Job
    post:
      consumes:
      - application/json
      description: create by json config
      parameters:
      - description: Job
        in: body
        name: Job
        required: true
        schema:
          $ref: '#/definitions/types.CreateJobRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Job'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Create Job
      tags:
      - Job
  /jobs/{id}:
    delete:
      consumes:
      - application/json
      description: Destroy by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Destroy Job
      tags:
      - Job
    get:
      consumes:
      - application/json
      description: Get Job by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Job'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Job
      tags:
      - Job
    patch:
      consumes:
      - application/json
      description: Update by json config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Job
        in: body
        name: Job
        required: true
        schema:
          $ref: '#/definitions/types.UpdateJobRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Job'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update Job
      tags:
      - Job
  /oauth:
    get:
      consumes:
      - application/json
      description: Get Oauths
      parameters:
      - default: 0
        description: current page
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: return max item count, default 10, max 50
        in: query
        maximum: 50
        minimum: 2
        name: per_page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Oauth'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Oauths
      tags:
      - Oauth
    post:
      consumes:
      - application/json
      description: create by json config
      parameters:
      - description: Oauth
        in: body
        name: Oauth
        required: true
        schema:
          $ref: '#/definitions/types.CreateOauthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Oauth'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Create Oauth
      tags:
      - Oauth
  /oauth/{id}:
    delete:
      consumes:
      - application/json
      description: Destroy by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Destroy Oauth
      tags:
      - Oauth
    get:
      consumes:
      - application/json
      description: Get Oauth by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Oauth'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Oauth
      tags:
      - Oauth
    patch:
      consumes:
      - application/json
      description: Update by json config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Oauth
        in: body
        name: Oauth
        required: true
        schema:
          $ref: '#/definitions/types.UpdateOauthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Oauth'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update Oauth
      tags:
      - Oauth
  /peers:
    get:
      consumes:
      - application/json
      description: Get Peers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Peers
      tags:
      - Peer
  /permissions:
    get:
      description: Get Permissions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rbac.Permission'
            type: array
        "400":
          description: ""
        "500":
          description: ""
      summary: Get Permissions
      tags:
      - Permission
  /preheats:
    post:
      consumes:
      - application/json
      description: create by json config
      parameters:
      - description: Preheat
        in: body
        name: Preheat
        required: true
        schema:
          $ref: '#/definitions/types.CreateV1PreheatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateV1PreheatResponse'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Create V1 Preheat
      tags:
      - Preheat
  /preheats/{id}:
    get:
      consumes:
      - application/json
      description: Get Preheat by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetV1PreheatResponse'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get V1 Preheat
      tags:
      - Preheat
  /roles:
    get:
      consumes:
      - application/json
      description: Get roles
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      summary: Get Roles
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Create Role by json config
      parameters:
      - description: Role
        in: body
        name: Role
        required: true
        schema:
          $ref: '#/definitions/types.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      summary: Create Role
      tags:
      - Role
  /roles/:role:
    delete:
      consumes:
      - application/json
      description: Destroy role by json config
      parameters:
      - description: role
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      summary: Destroy Role
      tags:
      - Role
    get:
      consumes:
      - application/json
      description: Get Role
      parameters:
      - description: role
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      summary: Get Role
      tags:
      - Role
  /roles/:role/permissions:
    delete:
      consumes:
      - application/json
      description: Remove Role Permission by json config
      parameters:
      - description: Permission
        in: body
        name: Permission
        required: true
        schema:
          $ref: '#/definitions/types.DeletePermissionForRoleRequest'
      - description: role
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      summary: Update Role
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Add Permission by json config
      parameters:
      - description: Permission
        in: body
        name: Permission
        required: true
        schema:
          $ref: '#/definitions/types.AddPermissionForRoleRequest'
      - description: role
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      summary: Add Permission For Role
      tags:
      - Role
  /scheduler-clusters:
    get:
      consumes:
      - application/json
      description: Get SchedulerClusters
      parameters:
      - default: 0
        description: current page
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: return max item count, default 10, max 50
        in: query
        maximum: 50
        minimum: 2
        name: per_page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SchedulerCluster'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get SchedulerClusters
      tags:
      - SchedulerCluster
    post:
      consumes:
      - application/json
      description: create by json config
      parameters:
      - description: SchedulerCluster
        in: body
        name: SchedulerCluster
        required: true
        schema:
          $ref: '#/definitions/types.CreateSchedulerClusterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SchedulerCluster'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Create SchedulerCluster
      tags:
      - SchedulerCluster
  /scheduler-clusters/{id}:
    delete:
      consumes:
      - application/json
      description: Destroy by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Destroy SchedulerCluster
      tags:
      - SchedulerCluster
    get:
      consumes:
      - application/json
      description: Get SchedulerCluster by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SchedulerCluster'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get SchedulerCluster
      tags:
      - SchedulerCluster
    patch:
      consumes:
      - application/json
      description: Update by json config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: SchedulerCluster
        in: body
        name: SchedulerCluster
        required: true
        schema:
          $ref: '#/definitions/types.UpdateSchedulerClusterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SchedulerCluster'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update SchedulerCluster
      tags:
      - SchedulerCluster
  /scheduler-clusters/{id}/schedulers/{scheduler_id}:
    put:
      consumes:
      - application/json
      description: Add Scheduler to schedulerCluster
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: scheduler id
        in: path
        name: scheduler_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Add Scheduler to schedulerCluster
      tags:
      - SchedulerCluster
  /schedulers:
    get:
      consumes:
      - application/json
      description: Get Schedulers
      parameters:
      - default: 0
        description: current page
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: return max item count, default 10, max 50
        in: query
        maximum: 50
        minimum: 2
        name: per_page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Scheduler'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Schedulers
      tags:
      - Scheduler
    post:
      consumes:
      - application/json
      description: create by json config
      parameters:
      - description: Scheduler
        in: body
        name: Scheduler
        required: true
        schema:
          $ref: '#/definitions/types.CreateSchedulerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Scheduler'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Create Scheduler
      tags:
      - Scheduler
  /schedulers/{id}:
    delete:
      consumes:
      - application/json
      description: Destroy by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Destroy Scheduler
      tags:
      - Scheduler
    get:
      consumes:
      - application/json
      description: Get Scheduler by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Scheduler'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Scheduler
      tags:
      - Scheduler
    patch:
      consumes:
      - application/json
      description: Update by json config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Scheduler
        in: body
        name: Scheduler
        required: true
        schema:
          $ref: '#/definitions/types.UpdateSchedulerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Scheduler'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update Scheduler
      tags:
      - Scheduler
  /security-groups:
    get:
      consumes:
      - application/json
      description: Get SecurityGroups
      parameters:
      - default: 0
        description: current page
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: return max item count, default 10, max 50
        in: query
        maximum: 50
        minimum: 2
        name: per_page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SecurityGroup'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get SecurityGroups
      tags:
      - SecurityGroup
    post:
      consumes:
      - application/json
      description: create by json config
      parameters:
      - description: SecurityGroup
        in: body
        name: SecurityGroup
        required: true
        schema:
          $ref: '#/definitions/types.CreateSecurityGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SecurityGroup'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Create SecurityGroup
      tags:
      - SecurityGroup
  /security-groups/{id}:
    get:
      consumes:
      - application/json
      description: Get SecurityGroup by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SecurityGroup'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get SecurityGroup
      tags:
      - SecurityGroup
    patch:
      consumes:
      - application/json
      description: Update by json config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: SecurityGroup
        in: body
        name: SecurityGroup
        required: true
        schema:
          $ref: '#/definitions/types.UpdateSecurityGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SecurityGroup'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update SecurityGroup
      tags:
      - SecurityGroup
  /security-groups/{id}/scheduler-clusters/{scheduler_cluster_id}:
    put:
      consumes:
      - application/json
      description: Add Scheduler to SecurityGroup
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: scheduler cluster id
        in: path
        name: scheduler_cluster_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Add Scheduler to SecurityGroup
      tags:
      - SecurityGroup
  /security-groups/{id}/security-rules/{security_rule_id}:
    delete:
      consumes:
      - application/json
      description: Destroy SecurityRule to SecurityGroup
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: security rule id
        in: path
        name: security_rule_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Destroy SecurityRule to SecurityGroup
      tags:
      - SecurityGroup
    put:
      consumes:
      - application/json
      description: Add SecurityRule to SecurityGroup
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: security rule id
        in: path
        name: security_rule_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Add SecurityRule to SecurityGroup
      tags:
      - SecurityGroup
  /security-groups/{id}/seed-peer-clusters/{seed_peer_cluster_id}:
    put:
      consumes:
      - application/json
      description: Add SeedPeer to SecurityGroup
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: seed peer cluster id
        in: path
        name: seed_peer_cluster_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Add SeedPeer to SecurityGroup
      tags:
      - SecurityGroup
  /security-rules:
    get:
      consumes:
      - application/json
      description: Get SecurityRules
      parameters:
      - default: 0
        description: current page
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: return max item count, default 10, max 50
        in: query
        maximum: 50
        minimum: 2
        name: per_page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SecurityRule'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get SecurityRules
      tags:
      - SecurityRule
    post:
      consumes:
      - application/json
      description: create by json config
      parameters:
      - description: SecurityRule
        in: body
        name: SecurityRule
        required: true
        schema:
          $ref: '#/definitions/types.CreateSecurityRuleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SecurityRule'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Create SecurityRule
      tags:
      - SecurityRule
  /security-rules/{id}:
    get:
      consumes:
      - application/json
      description: Get SecurityRule by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SecurityRule'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get SecurityRule
      tags:
      - SecurityRule
    patch:
      consumes:
      - application/json
      description: Update by json config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: SecurityRule
        in: body
        name: SecurityRule
        required: true
        schema:
          $ref: '#/definitions/types.UpdateSecurityRuleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SecurityRule'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update SecurityRule
      tags:
      - SecurityRule
  /securityGroups/{id}:
    delete:
      consumes:
      - application/json
      description: Destroy by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Destroy SecurityGroup
      tags:
      - SecurityGroup
  /securityRules/{id}:
    delete:
      consumes:
      - application/json
      description: Destroy by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Destroy SecurityRule
      tags:
      - SecurityRule
  /seed-peer-clusters:
    get:
      consumes:
      - application/json
      description: Get SeedPeerClusters
      parameters:
      - default: 0
        description: current page
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: return max item count, default 10, max 50
        in: query
        maximum: 50
        minimum: 2
        name: per_page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SeedPeerCluster'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get SeedPeerClusters
      tags:
      - SeedPeerCluster
    post:
      consumes:
      - application/json
      description: create by json config
      parameters:
      - description: DNCluster
        in: body
        name: SeedPeerCluster
        required: true
        schema:
          $ref: '#/definitions/types.CreateSeedPeerClusterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SeedPeerCluster'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Create SeedPeerCluster
      tags:
      - SeedPeerCluster
  /seed-peer-clusters/{id}:
    delete:
      consumes:
      - application/json
      description: Destroy by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Destroy SeedPeerCluster
      tags:
      - SeedPeerCluster
    get:
      consumes:
      - application/json
      description: Get SeedPeerCluster by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SeedPeerCluster'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get SeedPeerCluster
      tags:
      - SeedPeerCluster
    patch:
      consumes:
      - application/json
      description: Update by json config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: SeedPeerCluster
        in: body
        name: SeedPeerCluster
        required: true
        schema:
          $ref: '#/definitions/types.UpdateSeedPeerClusterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SeedPeerCluster'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update SeedPeerCluster
      tags:
      - SeedPeerCluster
  /seed-peer-clusters/{id}/scheduler-clusters/{scheduler_cluster_id}:
    put:
      consumes:
      - application/json
      description: Add SchedulerCluster to SeedPeerCluster
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: scheduler cluster id
        in: path
        name: scheduler_cluster_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Add SchedulerCluster to SeedPeerCluster
      tags:
      - SeedPeerCluster
  /seed-peer-clusters/{id}/seed-peers/{seed_peer_id}:
    put:
      consumes:
      - application/json
      description: Add SeedPeer to SeedPeerCluster
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: seed peer id
        in: path
        name: seed_peer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Add Instance to SeedPeerCluster
      tags:
      - SeedPeerCluster
  /seed-peers:
    get:
      consumes:
      - application/json
      description: Get SeedPeers
      parameters:
      - default: 0
        description: current page
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: return max item count, default 10, max 50
        in: query
        maximum: 50
        minimum: 2
        name: per_page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SeedPeer'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get SeedPeers
      tags:
      - SeedPeer
    post:
      consumes:
      - application/json
      description: create by json config
      parameters:
      - description: SeedPeer
        in: body
        name: SeedPeer
        required: true
        schema:
          $ref: '#/definitions/types.CreateSeedPeerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SeedPeer'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Create SeedPeer
      tags:
      - SeedPeer
  /seed-peers/{id}:
    delete:
      consumes:
      - application/json
      description: Destroy by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Destroy SeedPeer
      tags:
      - SeedPeer
    get:
      consumes:
      - application/json
      description: Get SeedPeer by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SeedPeer'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get SeedPeer
      tags:
      - SeedPeer
    patch:
      consumes:
      - application/json
      description: Update by json config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: SeedPeer
        in: body
        name: SeedPeer
        required: true
        schema:
          $ref: '#/definitions/types.UpdateSeedPeerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SeedPeer'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update SeedPeer
      tags:
      - SeedPeer
  /user/signin/{name}:
    get:
      consumes:
      - application/json
      description: oauth signin by json config
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Oauth Signin
      tags:
      - User
  /user/signin/{name}/callback:
    get:
      description: oauth signin callback by json config
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: code
        in: query
        name: code
        required: true
        type: string
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Oauth Signin Callback
      tags:
      - Oauth
  /user/signup:
    post:
      consumes:
      - application/json
      description: signup by json config
      parameters:
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/types.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: ""
        "500":
          description: ""
      summary: SignUp user
      tags:
      - User
  /users:
    get:
      consumes:
      - application/json
      description: Get Users
      parameters:
      - default: 0
        description: current page
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: return max item count, default 10, max 50
        in: query
        maximum: 50
        minimum: 2
        name: per_page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get Users
      tags:
      - User
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get User by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Get User
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: Update by json config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/types.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      summary: Update User
      tags:
      - User
  /users/{id}/reset_password:
    post:
      consumes:
      - application/json
      description: reset password by json config
      parameters:
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/types.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      summary: Reset Password For User
      tags:
      - User
  /users/{id}/roles:
    get:
      description: get roles by json config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: ""
        "500":
          description: ""
      summary: Get User Roles
      tags:
      - User
  /users/{id}/roles/{role}:
    delete:
      consumes:
      - application/json
      description: delete role by uri config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: role
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      summary: Delete Role For User
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: add role to user by uri config
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: role
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      summary: Add Role For User
      tags:
      - Users
swagger: "2.0"
